<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.peregrine-cms</groupId>
        <artifactId>testing.parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>testing.frontend</artifactId>
    <packaging>content-package</packaging>

    <name>Peregrine CMS Testing Frontend</name>
    <description>
        This is a set of Frontend Integration Tests
    </description>

    <properties>
        <targetServiceUrl>http://localhost:${http.port}/bin/cpm/package.service.html</targetServiceUrl>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>testing.basic</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>admin.core</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>base.core</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>replication.core</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.junit.core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.testing.rules</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.junit.teleporter</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-junit4</artifactId>
        </dependency>

        <dependency>
            <groupId>com.peregrine-cms</groupId>
            <artifactId>commons-test</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <!-- define the resources that will go into the package -->
            <resource>
                <!--
                    we want to keep some of the META-INF files and not configure
                    everything in the plugin.
                -->
                <directory>${basedir}/src/main/content/META-INF</directory>
                <targetPath>../vault-work/META-INF</targetPath>
            </resource>
            <resource>
                <!--
                    we want to keep some of the META-INF files and not configure
                    everything in the plugin.
                -->
                <directory>${basedir}/../../docs</directory>
                <targetPath>apps/admin/docs</targetPath>
            </resource>
            <resource>
                <directory>${basedir}/src/main/content/jcr_root</directory>
                <excludes>
                    <!-- exclude .vlt control files in the package -->
                    <exclude>**/.vlt</exclude>
                    <exclude>**/.vltignore</exclude>
                    <exclude>**/.gitignore</exclude>
                    <exclude>**/*.iml</exclude>
                    <exclude>**/.classpath</exclude>
                    <exclude>**/.project</exclude>
                    <exclude>**/.settings</exclude>
                    <exclude>**/.DS_Store</exclude>
                    <exclude>**/target/**</exclude>
                    <exclude>**/pom.xml</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <!-- Find free ports to run our server -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reserve-server-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <portNames>
                                <!-- used port name must be stored in property because it must be used for the base url -->
                                <portName>http.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <configuration>
                    <licenseName>peregrine-cms-license</licenseName>
                    <licenseResolver>${project.baseUri}../../src/license</licenseResolver>
                    <excludes>
                        <!-- Need to provide a pattern that deals with folders as well -->
                        <exclude>**/perapi/swaggereditor/**/*</exclude>
                        <exclude>**/*.svg</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>standalone</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <installDirectory>${nodepath}</installDirectory>
                        </configuration> 
                        <version>1.4</version>

                        <executions>
                            <execution>
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>v12.18.3</nodeVersion>
                                </configuration>
                            </execution>

                            <execution>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <!-- Optional config which provides for running any npm command -->
                                <configuration>
                                    <arguments>install</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm run test</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <environmentVariables>
                                        <NODE_PATH>./node_modules</NODE_PATH>
                                    </environmentVariables>
                                    <arguments>run test -- --baseUrl http://localhost:${http.port}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <!-- the Sling instance is provisioned from the model in src/main/provisioning/model.txt -->
                        <groupId>org.apache.sling</groupId>
                        <artifactId>slingstart-maven-plugin</artifactId>
                        <version>1.7.6</version>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>prepare-launchpad-package</id>
                                <goals>
                                    <goal>prepare-package</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>build-launchpad-package</id>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>start-container-before-IT</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-container-after-IT</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <!-- Let the Test Server run to manually verify the setup. TODO: remove later -->
                                    <shouldBlockUntilKeyIsPressed>${block.sling.at.the.end}</shouldBlockUntilKeyIsPressed>
                                    <!--<shouldBlockUntilKeyIsPressed>true</shouldBlockUntilKeyIsPressed>-->
                                </configuration>
                            </execution>

                        </executions>
                        <configuration>
                            <servers>
                                <server>
                                    <id>singleinstance</id>
                                    <port>${http.port}</port>
                                    <vmOpts>${sling.vm.options}</vmOpts>
                                    <!-- This makes sure that configurations for IT are used -->
                                    <runmode>it</runmode>
                                </server>
                            </servers>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.19.1</version>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <systemPropertyVariables>
                                <launchpad.http.port>${http.port}</launchpad.http.port>
                                <IT.expected.bundles.count>${IT.expected.bundles.count}</IT.expected.bundles.count>

                                <launchpad.http.server.url>http://${sling.host}:${http.port}</launchpad.http.server.url>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>io.wcm.maven.plugins</groupId>
                        <artifactId>wcmio-content-package-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <userId>${sling.user}</userId>
                            <password>${sling.password}</password>
                            <failOnMissingEmbed>true</failOnMissingEmbed>
                            <serviceURL>${targetServiceUrl}</serviceURL>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                                <configuration>
                                    <packageFiles>
                                        <packageFile>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>base.ui.apps</artifactId>
                                            <version>${project.version}</version>
                                            <type>zip</type>
                                        </packageFile>
                                        <packageFile>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>external</artifactId>
                                            <version>${project.version}</version>
                                            <type>zip</type>
                                        </packageFile>
                                        <packageFile>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>replication.ui.apps</artifactId>
                                            <version>${project.version}</version>
                                            <type>zip</type>
                                        </packageFile>
                                        <packageFile>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>felib.ui.apps</artifactId>
                                            <version>${project.version}</version>
                                            <type>zip</type>
                                        </packageFile>
                                        <packageFile>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>pagerender-vue.ui.apps</artifactId>
                                            <version>${project.version}</version>
                                            <type>zip</type>
                                        </packageFile>
                                        <packageFile>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>admin.ui.materialize</artifactId>
                                            <version>${project.version}</version>
                                            <type>zip</type>
                                        </packageFile>
                                        <packageFile>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>admin.ui.apps</artifactId>
                                            <version>${project.version}</version>
                                            <type>zip</type>
                                        </packageFile>
                                        <packageFile>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>example-vue.ui.apps</artifactId>
                                            <version>${project.version}</version>
                                            <type>zip</type>
                                        </packageFile>
                                    </packageFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>local</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.sling</groupId>
                        <artifactId>maven-sling-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-bundle</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                                <configuration>
                                    <bundleFileName>${project.basedir}/../testing.config.client//target/testing.config.client-1.0-SNAPSHOT.jar</bundleFileName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <installDirectory>${nodepath}</installDirectory>
                        </configuration> 
                        <version>1.4</version>

                        <executions>
                            <execution>
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>v12.18.3</nodeVersion>
                                </configuration>
                            </execution>

                            <execution>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <!-- Optional config which provides for running any npm command -->
                                <configuration>
                                    <arguments>install</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm run test</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <environmentVariables>
                                        <NODE_PATH>./node_modules</NODE_PATH>
                                    </environmentVariables>
                                    <arguments>run test -- --baseUrl http://localhost:8080</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
